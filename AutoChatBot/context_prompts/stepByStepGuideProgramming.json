[
    {
        "role": "system",
        "content": "you are a computer programm that creates step by step guide for programming and nothing else"
    },
    {
        "role": "user",
        "content": "Write a concise step by step guide on how to structure a repository for a python project  and create a debian installation file for it."
    },
    {
        "role": "assistant",
        "content": "1. Create a new directory for your project.\n2. Inside the project directory, create a \"src\" directory to store your Python source code.\n3. Create a \"README.md\" file to provide information about your project.\n4. Create a \"requirements.txt\" file to list any dependencies your project has.\n5. Create a \"setup.py\" file to define how your project should be installed.\n6. Create a \"debian\" directory to store Debian packaging files.\n7. Inside the \"debian\" directory, create a \"control\" file to define metadata about your package.\n8. Inside the \"debian\" directory, create a \"rules\" file to define the rules for building your package.\n9. Inside the \"debian\" directory, create a \"compat\" file to specify the debhelper compatibility level.\n10. Inside the \"debian\" directory, create a \"changelog\" file to track changes to your package.\n11. Inside the \"debian\" directory, create a \"install\" file to specify where files should be installed.\n12. Inside the \"debian\" directory, create a \"copyright\" file to define copyright information for your package.\n13. Inside the \"debian\" directory, create a \"watch\" file to specify how to check for new versions of your package.\n14. Run `dpkg-buildpackage -us -uc` to build your Debian package.\n15. Your Debian package will be created in the parent directory of your project.\n\nFolder structure as a tree:\n\n```\nproject/\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 main.py\n\u2502   \u2514\u2500\u2500 utils.py\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 requirements.txt\n\u251c\u2500\u2500 setup.py\n\u2514\u2500\u2500 debian/\n    \u251c\u2500\u2500 control\n    \u251c\u2500\u2500 rules\n    \u251c\u2500\u2500 compat\n    \u251c\u2500\u2500 changelog\n    \u251c\u2500\u2500 install\n    \u251c\u2500\u2500 copyright\n    \u2514\u2500\u2500 watch\n```\n\nSource code for files listed in the tree:\n\n- main.py: Contains the main Python code for the project.\nmain.py:\n```python\nfrom utils import hello\n\nif __name__ == \"__main__\":\n    hello()\n```\n\n- utils.py: Contains utility functions for the project.\nutils.py:\n```python\ndef hello():\n    print(\"Hello, world!\")\n```\n\n- README.md: Provides information about the project.\nREADME.md:\n```\n# Project Name\n\nThis is a Python project that demonstrates how to create a Debian package.\n```\n\n- requirements.txt: Lists dependencies for the project.\nrequirements.txt:\n```\nnumpy\n```\n\n- setup.py: Defines how the project should be installed.\nsetup.py:\n```python\nfrom setuptools import setup, find_packages\n\nsetup(\n    name=\"project\",\n    version=\"1.0\",\n    packages=find_packages(),\n    install_requires=[\n        \"numpy\"\n    ]\n)\n```\n\n- control: Defines metadata about the Debian package.\ncontrol:\n```\nSource: project\nSection: python\nPriority: optional\nMaintainer: Your Name <your.email@example.com>\nBuild-Depends: debhelper (>= 12)\nStandards-Version: 4.5.0\nHomepage: https://example.com\nPackage: project\nArchitecture: all\nDepends: ${python3:Depends}, ${misc:Depends}\nDescription: Description of your project\n```\n\n- rules: Defines the rules for building the Debian package.\nrules:\n```\n#!/usr/bin/make -f\n\n%:\n    dh $@\n```\n\n- compat: Specifies the debhelper compatibility level.\ncompat:\n```\n12\n```\n\n- changelog: Tracks changes to the package.\nchangelog:\n```\nproject (1.0-1) stable; urgency=low\n\n  * Initial release\n\n -- Your Name <your.email@example.com>  Tue, 01 Jan 2021 00:00:00 +0000\n```\n\n- install: Specifies where files should be installed.\ninstall:\n```\nsrc/* /usr/lib/python3/dist-packages/\ndebian/control /usr/share/doc/project/\nREADME.md /usr/share/doc/project/\n```\n\n- copyright: Defines copyright information for the package.\ncopyright:\n```\nFormat: https://www.debian.org/doc/packaging-manuals/copyright-format/1.0/\nUpstream-Name: project\nUpstream-Contact: Your Name <your.email@example.com>\nSource: https://example.com\n\nFiles: *\nCopyright: Your Name <your.email@example.com>\nLicense: GPL-3+\n```\n\n- watch: Specifies how to check for new versions of the package.\nwatch:\n```\nversion=3\nopts=dversionmangle=s/\\+(debian|dfsg|ds|deb|a|b|c|ubuntu|0\\.[\\d.]+)// \\\nhttps://example.com\n```"
    }
]